var jsdom = require('jsdom')

function loadScript(window, script_path, callback) {
	var features = window.document.implementation._features;

	scriptTag = window.document.createElement("script");
	window.document.implementation.addFeature('FetchExternalResources', ['script']);
	window.document.implementation.addFeature('ProcessExternalResources', ['script']);
	window.document.implementation.addFeature('MutationEvents', ["1.0"]);
	scriptTag.src = script_path
	window.document.body.appendChild(scriptTag);

	scriptTag.onload = scriptTag.onerror = function() {
		window.document.body.removeChild(scriptTag)
		if (callback) {
			callback(window);
		}
		window.document.implementation._features = features;
	}
}

exports.loadScript = loadScript

/*
 * Load HTML into window with no script execution, QuerySelecter enabled
 */
exports.html2WindowRaw = function(html) {
	var features = {}
	features.FetchExternalResources = false
	features.ProcessExternalResources = false
	features.QuerySelector = true
	return jsdom.jsdom(html, 0, {features: features}).createWindow()
}

/*
 * Load HTML into window handling scripts with appropriate runat="" 
 */
exports.html2Window = function(html, vars, topCallback) {
	var window = exports.html2WindowRaw(html)

	function onWindowLoad(window, callback) {
		var features = window.document.implementation._features;
		window.exports = {}
		window.export = function(key) {
			var val = vars[key]
			if (val)
				window.exports[key] = JSON.stringify(val)
		}

		var dummy = window.document.createElement("script");
		var path = '/Users/chandan/tmp/blank.js' 
		
		dummy.src = path
		dummy.onload = function() {
			window.document.body.removeChild(dummy)
			window.document.implementation._features = features
			if (callback)
				callback(window)
		}
		window.document.implementation.addFeature('FetchExternalResources', ['script']);
		window.document.implementation.addFeature('ProcessExternalResources', ['script']);
		window.document.implementation.addFeature('MutationEvents', ["1.0"]);
		try {
			window.document.body.appendChild(dummy)
		} catch(e) {
			console.log("Dummy error: " + e.message)
			if (callback)
				callback(window)
		}
	}

	var clientScripts = window.document.querySelectorAll('script[runat=]')
	for (var i=0; i<clientScripts.length; i++) {
		var element = clientScripts.item(i)
		element.setAttribute('savedtype',element.type)
		element.type='text/disabled'
	}

	var jquery = window.document.createElement("script");
	//jquery.src = __dirname + '/jquery.js'
	jquery.src = '/Users/chandan/tmp/jquery.js'
	try {
		window.document.head.insertBefore(jquery, window.document.head.childNodes[0])
	} catch(e) {
		console.log("Error inserting jquery: " + e.message)
	}

	var window2 = jsdom.jsdom(window.document.innerHTML).createWindow()
	onWindowLoad(window2, function(window) {
		var serverScripts = window.document.querySelectorAll('script[runat=server]')
		var i=serverScripts.length
		while (i--) {
			var element = serverScripts.item(i)
			element.parentNode.removeChild(element)
		}

		var clientScripts = window.document.querySelectorAll('script')
		for (var i=0; i<clientScripts.length; i++) {
			var element = clientScripts.item(i)
			var savedType = element.getAttribute('savedtype')
			if (savedType)
				element.type = savedType 
			element.removeAttribute('savedtype')
			element.removeAttribute('runat')
		}
		if (topCallback) {
			topCallback(window)
		}
	})
}

/*
 * Process server side scripts
 */
exports.processScripts = function(html, vars, callback) {
	html = ''+html
	exports.html2Window(html, vars, function(window) {
		if (window.exports.length > 0) {
			var export_js = '\n//View vars automatically generated by launch.js';
			window.exports.each(function(key) {
				export_js += '\nwindow.' + key + ' = ' + window.exports[key] + ';\n'
			})
			var exportScript = window.document.createElement('script')
			exportScript.type="text/javascript"
			exportScript.innerHTML = export_js;
			try {
				window.document.head.appendChild(exportScript)
			} catch(e) {
			}
		}
		callback(window.document.innerHTML)
	})
}

